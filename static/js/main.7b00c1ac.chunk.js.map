{"version":3,"sources":["component/Book.js","component/data.js","component/BookList.js","App.js","serviceWorker.js","index.js"],"names":["Book","state","count","addClickHandler","console","log","_this","setState","subClickHandler","resetClickHandler","_this$props$info","this","props","info","image","title","author","handleClick","react_default","a","createElement","className","src","alt","style","width","margin","onClick","Component","books","id","BookList","BooksData","_this2","textAlign","map","book","component_Book","key","App","component_BookList","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yNAqDeA,oNAjDbC,MAAQ,CACNC,MAAO,KAGTC,gBAAkB,WAChBC,QAAQC,IAAI,eACZC,EAAKC,SAAS,CACZL,MAAOI,EAAKL,MAAMC,MAAQ,OAG9BM,gBAAkB,WAChBJ,QAAQC,IAAI,eACZC,EAAKC,SAAS,CACZL,MAAOI,EAAKL,MAAMC,MAAQ,OAG9BO,kBAAoB,WAClBL,QAAQC,IAAI,eACZC,EAAKC,SAAS,CACZL,MAAO,6EAIF,IAAAQ,EAC0BC,KAAKC,MAAMC,KAApCC,EADDJ,EACCI,MAAOC,EADRL,EACQK,MAAOC,EADfN,EACeM,OACEL,KAAKC,MAArBK,YACR,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKR,EAAOS,IAAI,OAAOC,MAAO,CAAEC,MAAO,WAC5CP,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,mBAAWL,GACXG,EAAAC,EAAAC,cAAA,oBAAYJ,GACZE,EAAAC,EAAAC,cAAA,UAAQI,MAAO,CAAEE,OAAQ,OAASC,QAAShB,KAAKR,iBAAhD,aAGAe,EAAAC,EAAAC,cAAA,UAAQI,MAAO,CAAEE,OAAQ,OAASC,QAAShB,KAAKH,iBAAhD,aAGAU,EAAAC,EAAAC,cAAA,UAAQI,MAAO,CAAEE,OAAQ,OAASC,QAAShB,KAAKF,mBAAhD,eAIAS,EAAAC,EAAAC,cAAA,qBAAaT,KAAKV,MAAMC,gBA3Cf0B,cCmCJC,EAtCD,CACZ,CACEC,GAAI,EACJhB,MACE,0FACFC,MAAO,qBACPC,OAAQ,oBAEV,CACEc,GAAI,EACJhB,MACE,0FACFC,MAAO,eACPC,OAAQ,kBAEV,CACEc,GAAI,EACJhB,MACE,0FACFC,MAAO,uBACPC,OAAQ,eAEV,CACEc,GAAI,EACJhB,MACE,0FACFC,MAAO,0BACPC,OAAQ,eAEV,CACEc,GAAI,EACJhB,MACE,0FACFC,MAAO,oBACPC,OAAQ,qBCPGe,6MArBb9B,MAAQ,CACN4B,MAAOG,KAGTf,YAAc,WACZb,QAAQC,IAAI,+FAGL,IAAA4B,EAAAtB,KACP,OACEO,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAII,MAAO,CAAEU,UAAW,WAAxB,gCACCvB,KAAKV,MAAM4B,MAAMM,IAAI,SAAAC,GAAI,OACxBlB,EAAAC,EAAAC,cAACiB,EAAD,CAAMxB,KAAMuB,EAAME,IAAKF,EAAKN,GAAIb,YAAagB,EAAKhB,wBAdrCW,aCSRW,mLARX,OACErB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACoB,EAAD,cAJUZ,aCQEa,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO7B,EAAAC,EAAAC,cAAC4B,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.7b00c1ac.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n// import Button from \"./button\";\r\n\r\nclass Book extends Component {\r\n  state = {\r\n    count: 0\r\n  };\r\n\r\n  addClickHandler = () => {\r\n    console.log(\"You Clicked\");\r\n    this.setState({\r\n      count: this.state.count + 1\r\n    });\r\n  };\r\n  subClickHandler = () => {\r\n    console.log(\"You Clicked\");\r\n    this.setState({\r\n      count: this.state.count - 1\r\n    });\r\n  };\r\n  resetClickHandler = () => {\r\n    console.log(\"You Clicked\");\r\n    this.setState({\r\n      count: 0\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { image, title, author } = this.props.info;\r\n    const { handleClick } = this.props;\r\n    return (\r\n      <div className=\"book\">\r\n        <img src={image} alt=\"book\" style={{ width: \"150px\" }} />\r\n        <div>\r\n          <h4>Title:{title}</h4>\r\n          <h6>Author:{author}</h6>\r\n          <button style={{ margin: \"2px\" }} onClick={this.addClickHandler}>\r\n            Add Count\r\n          </button>\r\n          <button style={{ margin: \"2px\" }} onClick={this.subClickHandler}>\r\n            Sub Count\r\n          </button>\r\n          <button style={{ margin: \"2px\" }} onClick={this.resetClickHandler}>\r\n            Reset Count\r\n          </button>\r\n          {/* <Button handleClick={handleClick}/> */}\r\n          <h2> Count: {this.state.count}</h2>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Book;\r\n","const books = [\r\n  {\r\n    id: 1,\r\n    image:\r\n      \"https://images-eu.ssl-images-amazon.com/images/I/41VISZQIFUL._AC_US327_FMwebp_QL65_.jpg\",\r\n    title: \"India After Gandhi\",\r\n    author: \"Ramachandra Guha\"\r\n  },\r\n  {\r\n    id: 2,\r\n    image:\r\n      \"https://images-eu.ssl-images-amazon.com/images/I/51MD21vjoTL._AC_US327_FMwebp_QL65_.jpg\",\r\n    title: \"Ivory Throne\",\r\n    author: \"Manu S. Pillai\"\r\n  },\r\n  {\r\n    id: 3,\r\n    image:\r\n      \"https://images-eu.ssl-images-amazon.com/images/I/51l90wdzHrL._AC_US327_FMwebp_QL65_.jpg\",\r\n    title: \"The Room on the Roof\",\r\n    author: \"Ruskin Bond\"\r\n  },\r\n  {\r\n    id: 4,\r\n    image:\r\n      \"https://images-eu.ssl-images-amazon.com/images/I/51mINgHQ2AL._AC_US327_FMwebp_QL65_.jpg\",\r\n    title: \"The Inheritance of Loss\",\r\n    author: \"Kiran Desai\"\r\n  },\r\n  {\r\n    id: 5,\r\n    image:\r\n      \"https://images-eu.ssl-images-amazon.com/images/I/51u1pBj6GKL._AC_US327_FMwebp_QL65_.jpg\",\r\n    title: \"That Long Silence\",\r\n    author: \"Deshpande Shashi\"\r\n  }\r\n];\r\n\r\nexport default books;\r\n","import React, { Component } from \"react\";\r\nimport Book from \"./Book\";\r\nimport BooksData from \"./data\";\r\n// import Button from \"./button\";\r\n\r\nclass BookList extends Component {\r\n  state = {\r\n    books: BooksData\r\n  };\r\n\r\n  handleClick = () => {\r\n    console.log(\"I am from booklist\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2 style={{ textAlign: \"center\" }}>Best Selling Books this week</h2>\r\n        {this.state.books.map(book => (\r\n          <Book info={book} key={book.id} handleClick={this.handleClick} />\r\n        ))}\r\n        {/* <Button /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BookList;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport BookList from \"./component/BookList\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <BookList />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}